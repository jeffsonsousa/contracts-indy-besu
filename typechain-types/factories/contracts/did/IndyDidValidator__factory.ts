/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  IndyDidValidator,
  IndyDidValidatorInterface,
} from "../../../contracts/did/IndyDidValidator";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "id",
        type: "string",
      },
    ],
    name: "AuthenticationKeyNotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
    ],
    name: "AuthenticationKeyRequired",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
    ],
    name: "IncorrectDid",
    type: "error",
  },
  {
    inputs: [],
    name: "PackedPtrLen__LenOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "PackedPtrLen__PtrOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "Slice__OutOfBounds",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
    ],
    name: "validateDid",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string[]",
            name: "context",
            type: "string[]",
          },
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "controller",
            type: "string[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "id",
                type: "string",
              },
              {
                internalType: "string",
                name: "verificationMethodType",
                type: "string",
              },
              {
                internalType: "string",
                name: "controller",
                type: "string",
              },
              {
                internalType: "string",
                name: "publicKeyJwk",
                type: "string",
              },
              {
                internalType: "string",
                name: "publicKeyMultibase",
                type: "string",
              },
            ],
            internalType: "struct VerificationMethod[]",
            name: "verificationMethod",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "id",
                type: "string",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "id",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "verificationMethodType",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "controller",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "publicKeyJwk",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "publicKeyMultibase",
                    type: "string",
                  },
                ],
                internalType: "struct VerificationMethod",
                name: "verificationMethod",
                type: "tuple",
              },
            ],
            internalType: "struct VerificationRelationship[]",
            name: "authentication",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "id",
                type: "string",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "id",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "verificationMethodType",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "controller",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "publicKeyJwk",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "publicKeyMultibase",
                    type: "string",
                  },
                ],
                internalType: "struct VerificationMethod",
                name: "verificationMethod",
                type: "tuple",
              },
            ],
            internalType: "struct VerificationRelationship[]",
            name: "assertionMethod",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "id",
                type: "string",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "id",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "verificationMethodType",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "controller",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "publicKeyJwk",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "publicKeyMultibase",
                    type: "string",
                  },
                ],
                internalType: "struct VerificationMethod",
                name: "verificationMethod",
                type: "tuple",
              },
            ],
            internalType: "struct VerificationRelationship[]",
            name: "capabilityInvocation",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "id",
                type: "string",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "id",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "verificationMethodType",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "controller",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "publicKeyJwk",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "publicKeyMultibase",
                    type: "string",
                  },
                ],
                internalType: "struct VerificationMethod",
                name: "verificationMethod",
                type: "tuple",
              },
            ],
            internalType: "struct VerificationRelationship[]",
            name: "capabilityDelegation",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "id",
                type: "string",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "id",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "verificationMethodType",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "controller",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "publicKeyJwk",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "publicKeyMultibase",
                    type: "string",
                  },
                ],
                internalType: "struct VerificationMethod",
                name: "verificationMethod",
                type: "tuple",
              },
            ],
            internalType: "struct VerificationRelationship[]",
            name: "keyAgreement",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "id",
                type: "string",
              },
              {
                internalType: "string",
                name: "serviceType",
                type: "string",
              },
              {
                internalType: "string",
                name: "serviceEndpoint",
                type: "string",
              },
              {
                internalType: "string[]",
                name: "accept",
                type: "string[]",
              },
              {
                internalType: "string[]",
                name: "routingKeys",
                type: "string[]",
              },
            ],
            internalType: "struct Service[]",
            name: "service",
            type: "tuple[]",
          },
          {
            internalType: "string[]",
            name: "alsoKnownAs",
            type: "string[]",
          },
        ],
        internalType: "struct DidDocument",
        name: "didDocument",
        type: "tuple",
      },
    ],
    name: "validateVerificationKey",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type IndyDidValidatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IndyDidValidatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IndyDidValidator__factory extends ContractFactory {
  constructor(...args: IndyDidValidatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      IndyDidValidator & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): IndyDidValidator__factory {
    return super.connect(runner) as IndyDidValidator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IndyDidValidatorInterface {
    return new Interface(_abi) as IndyDidValidatorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IndyDidValidator {
    return new Contract(address, _abi, runner) as unknown as IndyDidValidator;
  }
}
