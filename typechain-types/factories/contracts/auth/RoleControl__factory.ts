/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  RoleControl,
  RoleControlInterface,
} from "../../../contracts/auth/RoleControl";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum RoleControlInterface.ROLES",
        name: "role",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleAssigned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum RoleControlInterface.ROLES",
        name: "role",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum RoleControlInterface.ROLES",
        name: "role",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "assignRole",
    outputs: [
      {
        internalType: "enum RoleControlInterface.ROLES",
        name: "assignedRole",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getRole",
    outputs: [
      {
        internalType: "enum RoleControlInterface.ROLES",
        name: "role",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum RoleControlInterface.ROLES",
        name: "role",
        type: "uint8",
      },
    ],
    name: "getRoleCount",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum RoleControlInterface.ROLES",
        name: "role",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "upgradeControlAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum RoleControlInterface.ROLES",
        name: "role",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1681525034801561004357600080fd5b5060805161182861006d600039600081816109290152818161097e0152610bbc01526118286000f3fe6080604052600436106100865760003560e01c806388a5bf6e1161005957806388a5bf6e1461014c5780639e97b8f614610189578063ad3cb1cc146101c6578063c4d66de8146101f1578063d02971ca1461021a57610086565b8063442767331461008b5780634cbb87d3146100c85780634f1ef2861461010557806352d1902d14610121575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad91906111ee565b610257565b6040516100bf9190611292565b60405180910390f35b3480156100d457600080fd5b506100ef60048036038101906100ea91906112d2565b6102ad565b6040516100fc919061132d565b60405180910390f35b61011f600480360381019061011a919061148e565b610493565b005b34801561012d57600080fd5b506101366104b2565b6040516101439190611503565b60405180910390f35b34801561015857600080fd5b50610173600480360381019061016e91906112d2565b6104e5565b6040516101809190611292565b60405180910390f35b34801561019557600080fd5b506101b060048036038101906101ab91906112d2565b6106d8565b6040516101bd919061132d565b60405180910390f35b3480156101d257600080fd5b506101db610755565b6040516101e8919061159d565b60405180910390f35b3480156101fd57600080fd5b50610218600480360381019061021391906111ee565b61078e565b005b34801561022657600080fd5b50610241600480360381019061023c91906115bf565b6108d6565b60405161024e919061160b565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000826000600260008360038111156102c9576102c861121b565b5b60038111156102db576102da61121b565b5b815260200190815260200160002060009054906101000a900460ff16905061030381336106d8565b61034457336040517f8e4a23d600000000000000000000000000000000000000000000000000000000815260040161033b9190611635565b60405180910390fd5b61034e85856106d8565b1561048657600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff0219169055600360008660038111156103b9576103b861121b565b5b60038111156103cb576103ca61121b565b5b8152602001908152602001600020600081819054906101000a900463ffffffff16809291906103f99061167f565b91906101000a81548163ffffffff021916908363ffffffff160217905550503373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f5a8379f4a3380f87fd5924475f76a3471ac8d775668601653e3f9ef69a3dd271876040516104759190611292565b60405180910390a36001925061048b565b600092505b505092915050565b61049b610927565b6104a482610a0d565b6104ae8282610a9b565b5050565b60006104bc610bba565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b6000826000600260008360038111156105015761050061121b565b5b60038111156105135761051261121b565b5b815260200190815260200160002060009054906101000a900460ff16905061053b81336106d8565b61057c57336040517f8e4a23d60000000000000000000000000000000000000000000000000000000081526004016105739190611635565b60405180910390fd5b61058685856106d8565b6106cd5784600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360038111156105ec576105eb61121b565b5b0217905550600360008660038111156106085761060761121b565b5b600381111561061a5761061961121b565b5b8152602001908152602001600020600081819054906101000a900463ffffffff1680929190610648906116a8565b91906101000a81548163ffffffff021916908363ffffffff160217905550503373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f47307e88f3e82b4e8cdffde5a264aa53a2ee17636fd8df7effe0a098da495656876040516106c49190611292565b60405180910390a35b849250505092915050565b60008260038111156106ed576106ec61121b565b5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600381111561074c5761074b61121b565b5b14905092915050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b6001600061079a610c41565b90508060000160089054906101000a900460ff16806107e557508167ffffffffffffffff168160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1610155b1561081c576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b818160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060018160000160086101000a81548160ff02191690831515021790555061086c610c69565b610874610c77565b61087d83610d9b565b60008160000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2826040516108c991906116f7565b60405180910390a1505050565b6000600360008360038111156108ef576108ee61121b565b5b60038111156109015761090061121b565b5b815260200190815260200160002060009054906101000a900463ffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614806109d457507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166109bb610de6565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610a0b576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663574a81d730836040518363ffffffff1660e01b8152600401610a68929190611712565b60006040518083038186803b158015610a8057600080fd5b505afa158015610a94573d6000803e3d6000fd5b5050505050565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610b0357506040513d601f19601f82011682018060405250810190610b009190611767565b60015b610b4457816040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401610b3b9190611635565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b8114610bab57806040517faa1d49a4000000000000000000000000000000000000000000000000000000008152600401610ba29190611503565b60405180910390fd5b610bb58383610e3d565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610c3f576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b610c746001336104e5565b50565b60016002600060016003811115610c9157610c9061121b565b5b6003811115610ca357610ca261121b565b5b815260200190815260200160002060006101000a81548160ff02191690836003811115610cd357610cd261121b565b5b021790555060016002600060026003811115610cf257610cf161121b565b5b6003811115610d0457610d0361121b565b5b815260200190815260200160002060006101000a81548160ff02191690836003811115610d3457610d3361121b565b5b0217905550600160026000600380811115610d5257610d5161121b565b5b6003811115610d6457610d6361121b565b5b815260200190815260200160002060006101000a81548160ff02191690836003811115610d9457610d9361121b565b5b0217905550565b610da3610eb0565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000610e147f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610ef0565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610e4682610efa565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a2600081511115610ea357610e9d8282610fc7565b50610eac565b610eab61104b565b5b5050565b610eb8611088565b610eee576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b03610f5657806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401610f4d9190611635565b60405180910390fd5b80610f837f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610ef0565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff1684604051610ff191906117db565b600060405180830381855af49150503d806000811461102c576040519150601f19603f3d011682016040523d82523d6000602084013e611031565b606091505b50915091506110418583836110a8565b9250505092915050565b6000341115611086576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000611092610c41565b60000160089054906101000a900460ff16905090565b6060826110bd576110b882611137565b61112f565b600082511480156110e5575060008473ffffffffffffffffffffffffffffffffffffffff163b145b1561112757836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161111e9190611635565b60405180910390fd5b819050611130565b5b9392505050565b60008151111561114a5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111bb82611190565b9050919050565b6111cb816111b0565b81146111d657600080fd5b50565b6000813590506111e8816111c2565b92915050565b60006020828403121561120457611203611186565b5b6000611212848285016111d9565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811061125b5761125a61121b565b5b50565b600081905061126c8261124a565b919050565b600061127c8261125e565b9050919050565b61128c81611271565b82525050565b60006020820190506112a76000830184611283565b92915050565b600481106112ba57600080fd5b50565b6000813590506112cc816112ad565b92915050565b600080604083850312156112e9576112e8611186565b5b60006112f7858286016112bd565b9250506020611308858286016111d9565b9150509250929050565b60008115159050919050565b61132781611312565b82525050565b6000602082019050611342600083018461131e565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61139b82611352565b810181811067ffffffffffffffff821117156113ba576113b9611363565b5b80604052505050565b60006113cd61117c565b90506113d98282611392565b919050565b600067ffffffffffffffff8211156113f9576113f8611363565b5b61140282611352565b9050602081019050919050565b82818337600083830152505050565b600061143161142c846113de565b6113c3565b90508281526020810184848401111561144d5761144c61134d565b5b61145884828561140f565b509392505050565b600082601f83011261147557611474611348565b5b813561148584826020860161141e565b91505092915050565b600080604083850312156114a5576114a4611186565b5b60006114b3858286016111d9565b925050602083013567ffffffffffffffff8111156114d4576114d361118b565b5b6114e085828601611460565b9150509250929050565b6000819050919050565b6114fd816114ea565b82525050565b600060208201905061151860008301846114f4565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561155857808201518184015260208101905061153d565b60008484015250505050565b600061156f8261151e565b6115798185611529565b935061158981856020860161153a565b61159281611352565b840191505092915050565b600060208201905081810360008301526115b78184611564565b905092915050565b6000602082840312156115d5576115d4611186565b5b60006115e3848285016112bd565b91505092915050565b600063ffffffff82169050919050565b611605816115ec565b82525050565b600060208201905061162060008301846115fc565b92915050565b61162f816111b0565b82525050565b600060208201905061164a6000830184611626565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061168a826115ec565b91506000820361169d5761169c611650565b5b600182039050919050565b60006116b3826115ec565b915063ffffffff82036116c9576116c8611650565b5b600182019050919050565b600067ffffffffffffffff82169050919050565b6116f1816116d4565b82525050565b600060208201905061170c60008301846116e8565b92915050565b60006040820190506117276000830185611626565b6117346020830184611626565b9392505050565b611744816114ea565b811461174f57600080fd5b50565b6000815190506117618161173b565b92915050565b60006020828403121561177d5761177c611186565b5b600061178b84828501611752565b91505092915050565b600081519050919050565b600081905092915050565b60006117b582611794565b6117bf818561179f565b93506117cf81856020860161153a565b80840191505092915050565b60006117e782846117aa565b91508190509291505056fea26469706673582212200e258f3849e71ef8b6655ad83fffcf52b86d8692aab8dece32ec3894b107d43c64736f6c63430008180033";

type RoleControlConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RoleControlConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RoleControl__factory extends ContractFactory {
  constructor(...args: RoleControlConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      RoleControl & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RoleControl__factory {
    return super.connect(runner) as RoleControl__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RoleControlInterface {
    return new Interface(_abi) as RoleControlInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): RoleControl {
    return new Contract(address, _abi, runner) as unknown as RoleControl;
  }
}
