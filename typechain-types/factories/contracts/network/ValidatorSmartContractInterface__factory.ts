/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ValidatorSmartContractInterface,
  ValidatorSmartContractInterfaceInterface,
} from "../../../contracts/network/ValidatorSmartContractInterface";

const _abi = [
  {
    inputs: [],
    name: "CannotDeactivateLastValidator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "limit",
        type: "uint16",
      },
    ],
    name: "ExceedsValidatorLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "InitialValidatorsRequired",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidValidatorAccountAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidValidatorAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderHasActiveValidator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "validator",
        type: "address",
      },
    ],
    name: "ValidatorAlreadyExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "validator",
        type: "address",
      },
    ],
    name: "ValidatorNotFound",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "validator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "byAccount",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "numValidators",
        type: "uint8",
      },
    ],
    name: "ValidatorAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "validator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "byAccount",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "numValidators",
        type: "uint8",
      },
    ],
    name: "ValidatorRemoved",
    type: "event",
  },
  {
    inputs: [],
    name: "getValidators",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ValidatorSmartContractInterface__factory {
  static readonly abi = _abi;
  static createInterface(): ValidatorSmartContractInterfaceInterface {
    return new Interface(_abi) as ValidatorSmartContractInterfaceInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ValidatorSmartContractInterface {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ValidatorSmartContractInterface;
  }
}
