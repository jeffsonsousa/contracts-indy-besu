/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  UpgradablePrototypeV2,
  UpgradablePrototypeV2Interface,
} from "../../../contracts/testonly/UpgradablePrototypeV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVersion",
    outputs: [
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "upgradeControlAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1681525034801561004357600080fd5b50608051610ee561006d600039600081816103a5015281816103fa01526106380152610ee56000f3fe60806040526004361061004a5760003560e01c80630d8e6e2c1461004f5780634f1ef2861461007a57806352d1902d14610096578063ad3cb1cc146100c1578063c4d66de8146100ec575b600080fd5b34801561005b57600080fd5b50610064610115565b6040516100719190610aab565b60405180910390f35b610094600480360381019061008f9190610c74565b610152565b005b3480156100a257600080fd5b506100ab610171565b6040516100b89190610ce9565b60405180910390f35b3480156100cd57600080fd5b506100d66101a4565b6040516100e39190610aab565b60405180910390f35b3480156100f857600080fd5b50610113600480360381019061010e9190610d04565b6101dd565b005b60606040518060400160405280600381526020017f322e300000000000000000000000000000000000000000000000000000000000815250905090565b61015a6103a3565b61016382610489565b61016d8282610517565b5050565b600061017b610636565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b60006101e76106bd565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff161480156102355750825b9050600060018367ffffffffffffffff1614801561026a575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610278575080155b156102af576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156102ff5760018560000160086101000a81548160ff0219169083151502179055505b856000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550831561039b5760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516103929190610d8a565b60405180910390a15b505050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148061045057507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166104376106e5565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610487576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663574a81d730836040518363ffffffff1660e01b81526004016104e4929190610db4565b60006040518083038186803b1580156104fc57600080fd5b505afa158015610510573d6000803e3d6000fd5b5050505050565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561057f57506040513d601f19601f8201168201806040525081019061057c9190610e09565b60015b6105c057816040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016105b79190610e36565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b811461062757806040517faa1d49a400000000000000000000000000000000000000000000000000000000815260040161061e9190610ce9565b60405180910390fd5b610631838361073c565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146106bb576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b60006107137f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6107af565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610745826107b9565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a26000815111156107a25761079c8282610886565b506107ab565b6107aa61090a565b5b5050565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b0361081557806040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161080c9190610e36565b60405180910390fd5b806108427f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6107af565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff16846040516108b09190610e98565b600060405180830381855af49150503d80600081146108eb576040519150601f19603f3d011682016040523d82523d6000602084013e6108f0565b606091505b5091509150610900858383610947565b9250505092915050565b6000341115610945576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60608261095c57610957826109d6565b6109ce565b60008251148015610984575060008473ffffffffffffffffffffffffffffffffffffffff163b145b156109c657836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016109bd9190610e36565b60405180910390fd5b8190506109cf565b5b9392505050565b6000815111156109e95780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081519050919050565b600082825260208201905092915050565b60005b83811015610a55578082015181840152602081019050610a3a565b60008484015250505050565b6000601f19601f8301169050919050565b6000610a7d82610a1b565b610a878185610a26565b9350610a97818560208601610a37565b610aa081610a61565b840191505092915050565b60006020820190508181036000830152610ac58184610a72565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b0c82610ae1565b9050919050565b610b1c81610b01565b8114610b2757600080fd5b50565b600081359050610b3981610b13565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610b8182610a61565b810181811067ffffffffffffffff82111715610ba057610b9f610b49565b5b80604052505050565b6000610bb3610acd565b9050610bbf8282610b78565b919050565b600067ffffffffffffffff821115610bdf57610bde610b49565b5b610be882610a61565b9050602081019050919050565b82818337600083830152505050565b6000610c17610c1284610bc4565b610ba9565b905082815260208101848484011115610c3357610c32610b44565b5b610c3e848285610bf5565b509392505050565b600082601f830112610c5b57610c5a610b3f565b5b8135610c6b848260208601610c04565b91505092915050565b60008060408385031215610c8b57610c8a610ad7565b5b6000610c9985828601610b2a565b925050602083013567ffffffffffffffff811115610cba57610cb9610adc565b5b610cc685828601610c46565b9150509250929050565b6000819050919050565b610ce381610cd0565b82525050565b6000602082019050610cfe6000830184610cda565b92915050565b600060208284031215610d1a57610d19610ad7565b5b6000610d2884828501610b2a565b91505092915050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b6000610d74610d6f610d6a84610d31565b610d4f565b610d3b565b9050919050565b610d8481610d59565b82525050565b6000602082019050610d9f6000830184610d7b565b92915050565b610dae81610b01565b82525050565b6000604082019050610dc96000830185610da5565b610dd66020830184610da5565b9392505050565b610de681610cd0565b8114610df157600080fd5b50565b600081519050610e0381610ddd565b92915050565b600060208284031215610e1f57610e1e610ad7565b5b6000610e2d84828501610df4565b91505092915050565b6000602082019050610e4b6000830184610da5565b92915050565b600081519050919050565b600081905092915050565b6000610e7282610e51565b610e7c8185610e5c565b9350610e8c818560208601610a37565b80840191505092915050565b6000610ea48284610e67565b91508190509291505056fea2646970667358221220eda4019ce47a138a037d7a53eb75083e418de4895452b336b4cb9856269959ec64736f6c63430008180033";

type UpgradablePrototypeV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UpgradablePrototypeV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UpgradablePrototypeV2__factory extends ContractFactory {
  constructor(...args: UpgradablePrototypeV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      UpgradablePrototypeV2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): UpgradablePrototypeV2__factory {
    return super.connect(runner) as UpgradablePrototypeV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UpgradablePrototypeV2Interface {
    return new Interface(_abi) as UpgradablePrototypeV2Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): UpgradablePrototypeV2 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as UpgradablePrototypeV2;
  }
}
