/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ValidatorControl,
  ValidatorControlInterface,
} from "../../../contracts/network/ValidatorControl";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotDeactivateLastValidator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "limit",
        type: "uint16",
      },
    ],
    name: "ExceedsValidatorLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InitialValidatorsRequired",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidValidatorAccountAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidValidatorAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderHasActiveValidator",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "validator",
        type: "address",
      },
    ],
    name: "ValidatorAlreadyExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "validator",
        type: "address",
      },
    ],
    name: "ValidatorNotFound",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "validator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "byAccount",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "numValidators",
        type: "uint8",
      },
    ],
    name: "ValidatorAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "validator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "byAccount",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "numValidators",
        type: "uint8",
      },
    ],
    name: "ValidatorRemoved",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newValidator",
        type: "address",
      },
    ],
    name: "addValidator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getValidators",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "roleControlContractAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "upgradeControlAddress",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "validator",
            type: "address",
          },
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
        ],
        internalType: "struct ValidatorControl.InitialValidatorInfo[]",
        name: "initialValidators",
        type: "tuple[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "validator",
        type: "address",
      },
    ],
    name: "removeValidator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1681525034801561004357600080fd5b506080516122b861006d60003960008181611258015281816112ad01526114eb01526122b86000f3fe6080604052600436106100705760003560e01c806352d1902d1161004e57806352d1902d146100e357806398772d881461010e578063ad3cb1cc14610137578063b7ab4db51461016257610070565b806340a141ff146100755780634d238c8e1461009e5780634f1ef286146100c7575b600080fd5b34801561008157600080fd5b5061009c600480360381019061009791906119eb565b61018d565b005b3480156100aa57600080fd5b506100c560048036038101906100c091906119eb565b6106dd565b005b6100e160048036038101906100dc9190611b5e565b610cb1565b005b3480156100ef57600080fd5b506100f8610cd0565b6040516101059190611bd3565b60405180910390f35b34801561011a57600080fd5b5061013560048036038101906101309190611d0b565b610d03565b005b34801561014357600080fd5b5061014c61118f565b6040516101599190611df9565b60405180910390f35b34801561016e57600080fd5b506101776111c8565b6040516101849190611ed9565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639e97b8f66003336040518363ffffffff1660e01b81526004016101eb929190611f81565b602060405180830381865afa158015610208573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022c9190611fe2565b61026d57336040517f8e4a23d6000000000000000000000000000000000000000000000000000000008152600401610264919061200f565b60405180910390fd5b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102d4576040517f713ce51100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160028054905003610313576040517ff1a1929300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff1660ff1660ff16815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff160361044957826040517f5a4887e1000000000000000000000000000000000000000000000000000000008152600401610440919061200f565b60405180910390fd5b600081602001519050600060028260ff168154811061046b5761046a61202a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260016002805490506104ae9190612092565b815481106104bf576104be61202a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508060028460ff16815481106105045761050361202a565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160146101000a81548160ff021916908360ff16021790555060028054806105b9576105b86120c6565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690559055600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549060ff021916905550503373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fb10fc4fba5b5eb2a6e82796887299220653537d6a5fc8a3fb60937bd2442ea296002805490506040516106cd9190612111565b60405180910390a3505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639e97b8f66003336040518363ffffffff1660e01b815260040161073b929190611f81565b602060405180830381865afa158015610758573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077c9190611fe2565b6107bd57336040517f8e4a23d60000000000000000000000000000000000000000000000000000000081526004016107b4919061200f565b60405180910390fd5b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610824576040517f713ce51100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61010061ffff1660028054905010610875576101006040517fbbaf528600000000000000000000000000000000000000000000000000000000815260040161086c9190612149565b60405180910390fd5b6000600280549050905060005b8160ff168160ff161015610b065760006003600060028460ff16815481106108ad576108ac61202a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff1660ff1660ff1681525050905060028260ff16815481106109a9576109a861202a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610a845760028260ff1681548110610a1d57610a1c61202a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517f591a237c000000000000000000000000000000000000000000000000000000008152600401610a7b919061200f565b60405180910390fd5b806000015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610af857336040517fa2a9ccce000000000000000000000000000000000000000000000000000000008152600401610aef919061200f565b60405180910390fd5b508080600101915050610882565b5060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018260ff16815250600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff021916908360ff1602179055509050506002839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f4583e1f70afe5f9f38886187732a4b1336bad46fc758cdd6ad86815931d6f6c2600280549050604051610ca49190612111565b60405180910390a3505050565b610cb9611256565b610cc28261133c565b610ccc82826113ca565b5050565b6000610cda6114e9565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b60016000610d0f611570565b90508060000160089054906101000a900460ff1680610d5a57508167ffffffffffffffff168160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1610155b15610d91576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b818160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060018160000160086101000a81548160ff0219169083151502179055506000835103610e14576040517fb4eb05d600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61010061ffff16835110610e61576101006040517fbbaf5286000000000000000000000000000000000000000000000000000000008152600401610e589190612149565b60405180910390fd5b60005b83518110156110e957600073ffffffffffffffffffffffffffffffffffffffff16848281518110610e9857610e9761202a565b5b60200260200101516020015173ffffffffffffffffffffffffffffffffffffffff1603610ef1576040517fd4c3bd5100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16848281518110610f1c57610f1b61202a565b5b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff1603610f75576040517f713ce51100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000848281518110610f8a57610f8961202a565b5b60200260200101519050600281600001519080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518060400160405280826020015173ffffffffffffffffffffffffffffffffffffffff1681526020018360ff1681525060036000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff021916908360ff160217905550905050508080600101915050610e64565b5084600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061113484611598565b60008160000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2826040516111809190612187565b60405180910390a15050505050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b6060600280548060200260200160405190810160405280929190818152602001828054801561124c57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611202575b5050505050905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148061130357507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166112ea6115e3565b73ffffffffffffffffffffffffffffffffffffffff1614155b1561133a576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663574a81d730836040518363ffffffff1660e01b81526004016113979291906121a2565b60006040518083038186803b1580156113af57600080fd5b505afa1580156113c3573d6000803e3d6000fd5b5050505050565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561143257506040513d601f19601f8201168201806040525081019061142f91906121f7565b60015b61147357816040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161146a919061200f565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b81146114da57806040517faa1d49a40000000000000000000000000000000000000000000000000000000081526004016114d19190611bd3565b60405180910390fd5b6114e4838361163a565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161461156e576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b6115a06116ad565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006116117f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6116ed565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611643826116f7565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a26000815111156116a05761169a82826117c4565b506116a9565b6116a8611848565b5b5050565b6116b5611885565b6116eb576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b0361175357806040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161174a919061200f565b60405180910390fd5b806117807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6116ed565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff16846040516117ee919061226b565b600060405180830381855af49150503d8060008114611829576040519150601f19603f3d011682016040523d82523d6000602084013e61182e565b606091505b509150915061183e8583836118a5565b9250505092915050565b6000341115611883576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600061188f611570565b60000160089054906101000a900460ff16905090565b6060826118ba576118b582611934565b61192c565b600082511480156118e2575060008473ffffffffffffffffffffffffffffffffffffffff163b145b1561192457836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161191b919061200f565b60405180910390fd5b81905061192d565b5b9392505050565b6000815111156119475780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006119b88261198d565b9050919050565b6119c8816119ad565b81146119d357600080fd5b50565b6000813590506119e5816119bf565b92915050565b600060208284031215611a0157611a00611983565b5b6000611a0f848285016119d6565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611a6b82611a22565b810181811067ffffffffffffffff82111715611a8a57611a89611a33565b5b80604052505050565b6000611a9d611979565b9050611aa98282611a62565b919050565b600067ffffffffffffffff821115611ac957611ac8611a33565b5b611ad282611a22565b9050602081019050919050565b82818337600083830152505050565b6000611b01611afc84611aae565b611a93565b905082815260208101848484011115611b1d57611b1c611a1d565b5b611b28848285611adf565b509392505050565b600082601f830112611b4557611b44611a18565b5b8135611b55848260208601611aee565b91505092915050565b60008060408385031215611b7557611b74611983565b5b6000611b83858286016119d6565b925050602083013567ffffffffffffffff811115611ba457611ba3611988565b5b611bb085828601611b30565b9150509250929050565b6000819050919050565b611bcd81611bba565b82525050565b6000602082019050611be86000830184611bc4565b92915050565b600067ffffffffffffffff821115611c0957611c08611a33565b5b602082029050602081019050919050565b600080fd5b600080fd5b600060408284031215611c3a57611c39611c1f565b5b611c446040611a93565b90506000611c54848285016119d6565b6000830152506020611c68848285016119d6565b60208301525092915050565b6000611c87611c8284611bee565b611a93565b90508083825260208201905060408402830185811115611caa57611ca9611c1a565b5b835b81811015611cd35780611cbf8882611c24565b845260208401935050604081019050611cac565b5050509392505050565b600082601f830112611cf257611cf1611a18565b5b8135611d02848260208601611c74565b91505092915050565b600080600060608486031215611d2457611d23611983565b5b6000611d32868287016119d6565b9350506020611d43868287016119d6565b925050604084013567ffffffffffffffff811115611d6457611d63611988565b5b611d7086828701611cdd565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b83811015611db4578082015181840152602081019050611d99565b60008484015250505050565b6000611dcb82611d7a565b611dd58185611d85565b9350611de5818560208601611d96565b611dee81611a22565b840191505092915050565b60006020820190508181036000830152611e138184611dc0565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611e50816119ad565b82525050565b6000611e628383611e47565b60208301905092915050565b6000602082019050919050565b6000611e8682611e1b565b611e908185611e26565b9350611e9b83611e37565b8060005b83811015611ecc578151611eb38882611e56565b9750611ebe83611e6e565b925050600181019050611e9f565b5085935050505092915050565b60006020820190508181036000830152611ef38184611e7b565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110611f3b57611f3a611efb565b5b50565b6000819050611f4c82611f2a565b919050565b6000611f5c82611f3e565b9050919050565b611f6c81611f51565b82525050565b611f7b816119ad565b82525050565b6000604082019050611f966000830185611f63565b611fa36020830184611f72565b9392505050565b60008115159050919050565b611fbf81611faa565b8114611fca57600080fd5b50565b600081519050611fdc81611fb6565b92915050565b600060208284031215611ff857611ff7611983565b5b600061200684828501611fcd565b91505092915050565b60006020820190506120246000830184611f72565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061209d82612059565b91506120a883612059565b92508282039050818111156120c0576120bf612063565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600060ff82169050919050565b61210b816120f5565b82525050565b60006020820190506121266000830184612102565b92915050565b600061ffff82169050919050565b6121438161212c565b82525050565b600060208201905061215e600083018461213a565b92915050565b600067ffffffffffffffff82169050919050565b61218181612164565b82525050565b600060208201905061219c6000830184612178565b92915050565b60006040820190506121b76000830185611f72565b6121c46020830184611f72565b9392505050565b6121d481611bba565b81146121df57600080fd5b50565b6000815190506121f1816121cb565b92915050565b60006020828403121561220d5761220c611983565b5b600061221b848285016121e2565b91505092915050565b600081519050919050565b600081905092915050565b600061224582612224565b61224f818561222f565b935061225f818560208601611d96565b80840191505092915050565b6000612277828461223a565b91508190509291505056fea2646970667358221220857e12388f72e93daa8c25193f0f4c16408cb510f2755ec953d2cce25e2d5ac764736f6c63430008180033";

type ValidatorControlConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ValidatorControlConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ValidatorControl__factory extends ContractFactory {
  constructor(...args: ValidatorControlConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ValidatorControl & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ValidatorControl__factory {
    return super.connect(runner) as ValidatorControl__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ValidatorControlInterface {
    return new Interface(_abi) as ValidatorControlInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ValidatorControl {
    return new Contract(address, _abi, runner) as unknown as ValidatorControl;
  }
}
