/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  UpgradablePrototypeV1,
  UpgradablePrototypeV1Interface,
} from "../../../contracts/testonly/UpgradablePrototypeV1";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVersion",
    outputs: [
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "upgradeControlAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1681525034801561004357600080fd5b50608051610f5961006d6000396000818161036e015281816103c301526106010152610f596000f3fe60806040526004361061004a5760003560e01c80630d8e6e2c1461004f5780634f1ef2861461007a57806352d1902d14610096578063ad3cb1cc146100c1578063c4d66de8146100ec575b600080fd5b34801561005b57600080fd5b50610064610115565b6040516100719190610b1f565b60405180910390f35b610094600480360381019061008f9190610ce8565b610152565b005b3480156100a257600080fd5b506100ab610171565b6040516100b89190610d5d565b60405180910390f35b3480156100cd57600080fd5b506100d66101a4565b6040516100e39190610b1f565b60405180910390f35b3480156100f857600080fd5b50610113600480360381019061010e9190610d78565b6101dd565b005b60606040518060400160405280600381526020017f312e300000000000000000000000000000000000000000000000000000000000815250905090565b61015a61036c565b61016382610452565b61016d82826104e0565b5050565b600061017b6105ff565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b60006101e7610686565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff161480156102355750825b9050600060018367ffffffffffffffff1614801561026a575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610278575080155b156102af576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156102ff5760018560000160086101000a81548160ff0219169083151502179055505b610308866106ae565b83156103645760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2600160405161035b9190610dfe565b60405180910390a15b505050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148061041957507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166104006106f9565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610450576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663574a81d730836040518363ffffffff1660e01b81526004016104ad929190610e28565b60006040518083038186803b1580156104c557600080fd5b505afa1580156104d9573d6000803e3d6000fd5b5050505050565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561054857506040513d601f19601f820116820180604052508101906105459190610e7d565b60015b61058957816040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016105809190610eaa565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b81146105f057806040517faa1d49a40000000000000000000000000000000000000000000000000000000081526004016105e79190610d5d565b60405180910390fd5b6105fa8383610750565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610684576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b6106b66107c3565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006107277f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610803565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6107598261080d565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a26000815111156107b6576107b082826108da565b506107bf565b6107be61095e565b5b5050565b6107cb61099b565b610801576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b0361086957806040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016108609190610eaa565b60405180910390fd5b806108967f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610803565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff16846040516109049190610f0c565b600060405180830381855af49150503d806000811461093f576040519150601f19603f3d011682016040523d82523d6000602084013e610944565b606091505b50915091506109548583836109bb565b9250505092915050565b6000341115610999576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60006109a5610686565b60000160089054906101000a900460ff16905090565b6060826109d0576109cb82610a4a565b610a42565b600082511480156109f8575060008473ffffffffffffffffffffffffffffffffffffffff163b145b15610a3a57836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401610a319190610eaa565b60405180910390fd5b819050610a43565b5b9392505050565b600081511115610a5d5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081519050919050565b600082825260208201905092915050565b60005b83811015610ac9578082015181840152602081019050610aae565b60008484015250505050565b6000601f19601f8301169050919050565b6000610af182610a8f565b610afb8185610a9a565b9350610b0b818560208601610aab565b610b1481610ad5565b840191505092915050565b60006020820190508181036000830152610b398184610ae6565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b8082610b55565b9050919050565b610b9081610b75565b8114610b9b57600080fd5b50565b600081359050610bad81610b87565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610bf582610ad5565b810181811067ffffffffffffffff82111715610c1457610c13610bbd565b5b80604052505050565b6000610c27610b41565b9050610c338282610bec565b919050565b600067ffffffffffffffff821115610c5357610c52610bbd565b5b610c5c82610ad5565b9050602081019050919050565b82818337600083830152505050565b6000610c8b610c8684610c38565b610c1d565b905082815260208101848484011115610ca757610ca6610bb8565b5b610cb2848285610c69565b509392505050565b600082601f830112610ccf57610cce610bb3565b5b8135610cdf848260208601610c78565b91505092915050565b60008060408385031215610cff57610cfe610b4b565b5b6000610d0d85828601610b9e565b925050602083013567ffffffffffffffff811115610d2e57610d2d610b50565b5b610d3a85828601610cba565b9150509250929050565b6000819050919050565b610d5781610d44565b82525050565b6000602082019050610d726000830184610d4e565b92915050565b600060208284031215610d8e57610d8d610b4b565b5b6000610d9c84828501610b9e565b91505092915050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b6000610de8610de3610dde84610da5565b610dc3565b610daf565b9050919050565b610df881610dcd565b82525050565b6000602082019050610e136000830184610def565b92915050565b610e2281610b75565b82525050565b6000604082019050610e3d6000830185610e19565b610e4a6020830184610e19565b9392505050565b610e5a81610d44565b8114610e6557600080fd5b50565b600081519050610e7781610e51565b92915050565b600060208284031215610e9357610e92610b4b565b5b6000610ea184828501610e68565b91505092915050565b6000602082019050610ebf6000830184610e19565b92915050565b600081519050919050565b600081905092915050565b6000610ee682610ec5565b610ef08185610ed0565b9350610f00818560208601610aab565b80840191505092915050565b6000610f188284610edb565b91508190509291505056fea2646970667358221220f50b412464e2a468e1ff4ed4d132bb3ff73579771cddcec610a59461c1ee3cf864736f6c63430008180033";

type UpgradablePrototypeV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UpgradablePrototypeV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UpgradablePrototypeV1__factory extends ContractFactory {
  constructor(...args: UpgradablePrototypeV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      UpgradablePrototypeV1 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): UpgradablePrototypeV1__factory {
    return super.connect(runner) as UpgradablePrototypeV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UpgradablePrototypeV1Interface {
    return new Interface(_abi) as UpgradablePrototypeV1Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): UpgradablePrototypeV1 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as UpgradablePrototypeV1;
  }
}
