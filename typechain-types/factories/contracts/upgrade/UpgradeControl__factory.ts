/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  UpgradeControl,
  UpgradeControlInterface,
} from "../../../contracts/upgrade/UpgradeControl";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientApprovals",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "UpgradeAlreadyApproved",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "UpgradeAlreadyProposed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "UpgradeProposalNotFound",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proxy",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "UpgradeApproved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proxy",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "UpgradeProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ensureSufficientApprovals",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "roleControlAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "propose",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1681525034801561004357600080fd5b50608051611d3061006d60003960008181610d7901528181610dce0152610f8b0152611d306000f3fe6080604052600436106100705760003560e01c80637e5465ba1161004e5780637e5465ba146100e5578063ad3cb1cc1461010e578063c4d66de814610139578063e8f158641461016257610070565b80634f1ef2861461007557806352d1902d14610091578063574a81d7146100bc575b600080fd5b61008f600480360381019061008a91906116be565b61018b565b005b34801561009d57600080fd5b506100a66101aa565b6040516100b39190611733565b60405180910390f35b3480156100c857600080fd5b506100e360048036038101906100de919061174e565b6101dd565b005b3480156100f157600080fd5b5061010c6004803603810190610107919061174e565b610221565b005b34801561011a57600080fd5b5061012361075d565b604051610130919061180d565b60405180910390f35b34801561014557600080fd5b50610160600480360381019061015b919061182f565b610796565b005b34801561016e57600080fd5b506101896004803603810190610184919061174e565b610905565b005b610193610d77565b61019c82610e5d565b6101a68282610e6a565b5050565b60006101b4610f89565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b6101e78282611010565b61021d576040517f8af69cf100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639e97b8f66001336040518363ffffffff1660e01b815260040161027d9291906118e2565b602060405180830381865afa15801561029a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102be9190611943565b6102ff57336040517f8e4a23d60000000000000000000000000000000000000000000000000000000081526004016102f69190611970565b60405180910390fd5b81816000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154036103c75781816040517f3af3b5570000000000000000000000000000000000000000000000000000000081526004016103be92919061198b565b60405180910390fd5b8383600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156104d75781816040517fb6abc4580000000000000000000000000000000000000000000000000000000081526004016104ce92919061198b565b60405180910390fd5b60018060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600081819054906101000a900463ffffffff168092919061064a906119f3565b91906101000a81548163ffffffff021916908363ffffffff160217905550503373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fc42e62d9f6b29d37599fcb472a6f30bc6e8c8d6fbbcb774ac585c02b314bd2ad60405160405180910390a46106e48686611010565b15610755578573ffffffffffffffffffffffffffffffffffffffff16634f1ef286866040518263ffffffff1660e01b81526004016107229190611a56565b600060405180830381600087803b15801561073c57600080fd5b505af1158015610750573d6000803e3d6000fd5b505050505b505050505050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b600160006107a261117a565b90508060000160089054906101000a900460ff16806107ed57508167ffffffffffffffff168160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1610155b15610824576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b818160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060018160000160086101000a81548160ff021916908315150217905550826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008160000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2826040516108f89190611aa7565b60405180910390a1505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639e97b8f66001336040518363ffffffff1660e01b81526004016109619291906118e2565b602060405180830381865afa15801561097e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a29190611943565b6109e357336040517f8e4a23d60000000000000000000000000000000000000000000000000000000081526004016109da9190611970565b60405180910390fd5b808073ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610a4c57506040513d601f19601f82011682018060405250810190610a499190611aee565b60015b610a8d57806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401610a849190611970565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b8114610af457806040517faa1d49a4000000000000000000000000000000000000000000000000000000008152600401610aeb9190611733565b60405180910390fd5b83836000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015414610bbc5781816040517f4cc571cf000000000000000000000000000000000000000000000000000000008152600401610bb392919061198b565b60405180910390fd5b33600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160046101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055503373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fe33956f8d60ae2b38d9860e46ec9b53d8fb58aa99a9404b1195b7ce35d2941dc60405160405180910390a4505050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161480610e2457507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610e0b6111a2565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610e5b576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610e6730826101dd565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610ed257506040513d601f19601f82011682018060405250810190610ecf9190611aee565b60015b610f1357816040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401610f0a9190611970565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b8114610f7a57806040517faa1d49a4000000000000000000000000000000000000000000000000000000008152600401610f719190611733565b60405180910390fd5b610f8483836111f9565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161461100e576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d02971ca60016040518263ffffffff1660e01b815260040161106d9190611b1b565b602060405180830381865afa15801561108a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ae9190611b62565b90506000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900463ffffffff169050600061115d6006846111569190611b8f565b600a61126c565b90508063ffffffff168263ffffffff161015935050505092915050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b60006111d07f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61129a565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611202826112a4565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a260008151111561125f576112598282611371565b50611268565b6112676113f5565b5b5050565b600060018260018561127e9190611bcc565b6112889190611c33565b6112929190611c64565b905092915050565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b0361130057806040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016112f79190611970565b60405180910390fd5b8061132d7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61129a565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff168460405161139b9190611ce3565b600060405180830381855af49150503d80600081146113d6576040519150601f19603f3d011682016040523d82523d6000602084013e6113db565b606091505b50915091506113eb858383611432565b9250505092915050565b6000341115611430576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60608261144757611442826114c1565b6114b9565b6000825114801561146f575060008473ffffffffffffffffffffffffffffffffffffffff163b145b156114b157836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016114a89190611970565b60405180910390fd5b8190506114ba565b5b9392505050565b6000815111156114d45780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006115458261151a565b9050919050565b6115558161153a565b811461156057600080fd5b50565b6000813590506115728161154c565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6115cb82611582565b810181811067ffffffffffffffff821117156115ea576115e9611593565b5b80604052505050565b60006115fd611506565b905061160982826115c2565b919050565b600067ffffffffffffffff82111561162957611628611593565b5b61163282611582565b9050602081019050919050565b82818337600083830152505050565b600061166161165c8461160e565b6115f3565b90508281526020810184848401111561167d5761167c61157d565b5b61168884828561163f565b509392505050565b600082601f8301126116a5576116a4611578565b5b81356116b584826020860161164e565b91505092915050565b600080604083850312156116d5576116d4611510565b5b60006116e385828601611563565b925050602083013567ffffffffffffffff81111561170457611703611515565b5b61171085828601611690565b9150509250929050565b6000819050919050565b61172d8161171a565b82525050565b60006020820190506117486000830184611724565b92915050565b6000806040838503121561176557611764611510565b5b600061177385828601611563565b925050602061178485828601611563565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b838110156117c85780820151818401526020810190506117ad565b60008484015250505050565b60006117df8261178e565b6117e98185611799565b93506117f98185602086016117aa565b61180281611582565b840191505092915050565b6000602082019050818103600083015261182781846117d4565b905092915050565b60006020828403121561184557611844611510565b5b600061185384828501611563565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811061189c5761189b61185c565b5b50565b60008190506118ad8261188b565b919050565b60006118bd8261189f565b9050919050565b6118cd816118b2565b82525050565b6118dc8161153a565b82525050565b60006040820190506118f760008301856118c4565b61190460208301846118d3565b9392505050565b60008115159050919050565b6119208161190b565b811461192b57600080fd5b50565b60008151905061193d81611917565b92915050565b60006020828403121561195957611958611510565b5b60006119678482850161192e565b91505092915050565b600060208201905061198560008301846118d3565b92915050565b60006040820190506119a060008301856118d3565b6119ad60208301846118d3565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600063ffffffff82169050919050565b60006119fe826119e3565b915063ffffffff8203611a1457611a136119b4565b5b600182019050919050565b600082825260208201905092915050565b50565b6000611a40600083611a1f565b9150611a4b82611a30565b600082019050919050565b6000604082019050611a6b60008301846118d3565b8181036020830152611a7c81611a33565b905092915050565b600067ffffffffffffffff82169050919050565b611aa181611a84565b82525050565b6000602082019050611abc6000830184611a98565b92915050565b611acb8161171a565b8114611ad657600080fd5b50565b600081519050611ae881611ac2565b92915050565b600060208284031215611b0457611b03611510565b5b6000611b1284828501611ad9565b91505092915050565b6000602082019050611b3060008301846118c4565b92915050565b611b3f816119e3565b8114611b4a57600080fd5b50565b600081519050611b5c81611b36565b92915050565b600060208284031215611b7857611b77611510565b5b6000611b8684828501611b4d565b91505092915050565b6000611b9a826119e3565b9150611ba5836119e3565b9250828202611bb3816119e3565b9150808214611bc557611bc46119b4565b5b5092915050565b6000611bd7826119e3565b9150611be2836119e3565b9250828203905063ffffffff811115611bfe57611bfd6119b4565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611c3e826119e3565b9150611c49836119e3565b925082611c5957611c58611c04565b5b828204905092915050565b6000611c6f826119e3565b9150611c7a836119e3565b9250828201905063ffffffff811115611c9657611c956119b4565b5b92915050565b600081519050919050565b600081905092915050565b6000611cbd82611c9c565b611cc78185611ca7565b9350611cd78185602086016117aa565b80840191505092915050565b6000611cef8284611cb2565b91508190509291505056fea26469706673582212208d9e207da62f0a8bdf03cf10e0735faf6c2e85cffc79dfbce38320fbdf3084dc64736f6c63430008180033";

type UpgradeControlConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UpgradeControlConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UpgradeControl__factory extends ContractFactory {
  constructor(...args: UpgradeControlConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      UpgradeControl & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): UpgradeControl__factory {
    return super.connect(runner) as UpgradeControl__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UpgradeControlInterface {
    return new Interface(_abi) as UpgradeControlInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): UpgradeControl {
    return new Contract(address, _abi, runner) as unknown as UpgradeControl;
  }
}
